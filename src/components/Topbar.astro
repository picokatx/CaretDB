---
import { getSession } from "auth-astro/server";

const systemName = "ClickstreamDB";

// Get current user session
const session = await getSession(Astro.request);

// Define navigation links
const navLinks = [
  { href: "/", label: "Home", requiresAuth: false },
  { href: "/matrix", label: "Matrix", requiresAuth: true },
  { href: "/database", label: "Database", requiresAuth: true },
  { href: "/analysis", label: "Analysis", requiresAuth: true },
  { href: "/reports", label: "Reports", requiresAuth: true },
  { href: "/dashboard", label: "Dashboard", requiresAuth: true }, 
  { href: "/login", label: "Login", requiresAuth: false, hideWhenAuth: true } // Special case for login link
];

// Get current path to highlight active link
const currentPath = Astro.url.pathname;
---

<header class="navbar bg-base-200 shadow-lg z-10">
  <div class="navbar-start">
    <div class="dropdown">
      <label tabindex="0" class="btn btn-ghost lg:hidden">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" /></svg>
      </label>
      <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-200 rounded-box w-52">
        {navLinks.map(link => {
          const showLink = 
            (link.requiresAuth && session) || 
            (link.hideWhenAuth && !session) || 
            (!link.requiresAuth && !link.hideWhenAuth);
          
          return showLink ? (
            <li>
              <a 
                href={link.href} 
                class={currentPath === link.href ? "active font-bold" : ""}
              >
                {link.label}
              </a>
            </li>
          ) : null;
        })}
      </ul>
    </div>
    <a href="/" class="btn btn-ghost normal-case text-xl">
      <span class="text-primary font-bold">{systemName}</span>
    </a>
  </div>
  <div class="navbar-center hidden lg:flex">
    <ul class="menu menu-horizontal px-1">
       {navLinks.map(link => {
          const showLink = 
            (link.requiresAuth && session) || 
            (link.hideWhenAuth && !session) || 
            (!link.requiresAuth && !link.hideWhenAuth);
          
          return showLink ? (
            <li>
              <a 
                href={link.href} 
                class={currentPath === link.href ? "active font-bold" : ""}
              >
                {link.label}
              </a>
            </li>
          ) : null;
        })}
    </ul>
  </div>
  <div class="navbar-end">

    <!-- User Avatar Dropdown -->
    <div class="dropdown dropdown-end">
      <label tabindex="0" class="btn btn-ghost btn-circle avatar">
        <div class="w-10 rounded-full">
          <!-- Replaced image with SVG silhouette -->
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-full h-full text-base-content/30">
            <path fill-rule="evenodd" d="M18.685 19.097A9.723 9.723 0 0 0 21.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 0 0 3.065 7.097A9.716 9.716 0 0 0 12 21.75a9.716 9.716 0 0 0 6.685-2.653Zm-12.54-1.285A7.486 7.486 0 0 1 12 15a7.486 7.486 0 0 1 5.855 2.812A8.224 8.224 0 0 1 12 20.25a8.224 8.224 0 0 1-5.855-2.438ZM15.75 9a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z" clip-rule="evenodd" />
          </svg>
        </div>
      </label>
      <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-200 rounded-box w-52">
        <li><a href="/settings">Settings</a></li>
        {!session ? (
          <li><a href="/login" id="login-link">Login</a></li>
        ) : (
          <li><a href="#" id="logout-button">Logout</a></li>
        )}
      </ul>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    // Get auth-astro client-side functions
    const { signOut } = await import("auth-astro/client");
    
    // Add logout functionality
    const logoutButton = document.getElementById("logout-button");
    if (logoutButton) {
      logoutButton.addEventListener('click', (e) => {
        e.preventDefault();
        signOut({ callbackUrl: '/login' });
      });
    }
  });
</script> 