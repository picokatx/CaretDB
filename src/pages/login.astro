---
import Layout from '../components/Layout.astro';
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);

// Check for error parameters
const errorParam = Astro.url.searchParams.get("error");
const errorCode = Astro.url.searchParams.get("code"); // Get the custom error code
const message = Astro.url.searchParams.get("message"); // For success messages (e.g., from registration)

// Determine error message based on params
let displayError = null;
if (errorParam === 'CredentialsSignin' || errorCode) {
	if (errorCode === 'InvalidEmail') {
		displayError = "Invalid email address.";
	} else if (errorCode === 'IncorrectPassword') {
		displayError = "Incorrect password.";
	} else {
		displayError = "Login failed. Please check your credentials."; // Generic fallback
	}
}

// Fetch CSRF token server-side
let csrfToken = null;
try {
	// Construct the full URL for the fetch request
	const csrfUrl = new URL("/api/auth/csrf", Astro.url.origin);
	const csrfResponse = await fetch(csrfUrl.toString(), {
		headers: {
			// Forward cookies from the incoming request
			'cookie': Astro.request.headers.get('cookie') ?? ''
		}
	});
	if (csrfResponse.ok) {
		const csrfData = await csrfResponse.json();
		csrfToken = csrfData.csrfToken;
	}
} catch (e) {
	console.error("Failed to fetch CSRF token:", e);
}
---

<Layout title="ClickstreamDB - Login">
	<style>
		.login-container {
			display: flex;
			align-items: center;
			justify-content: center;
			min-height: 80vh;
		}
	</style>

	<div class="login-container">
		{session ? (
			<div class="card w-96 bg-base-100 shadow-xl text-center">
				<div class="card-body">
					<h2 class="card-title block">Welcome Back!</h2>
					<p>Welcome, {session.user?.name ?? session.user?.email}!</p>
					<div class="card-actions justify-center mt-4">
						<button id="logout" class="btn btn-primary">Logout</button>
					</div>
					<details class="text-left mt-4 collapse collapse-arrow border border-base-300 bg-base-200">
						<summary class="collapse-title text-sm font-medium">Session Details</summary>
						<div class="collapse-content">
							<pre class="text-xs whitespace-pre-wrap break-all">{JSON.stringify(session, null, 2)}</pre>
						</div>
					</details>
				</div>
			</div>
		) : (
			<div class="card w-96 bg-base-100 shadow-xl">
				<div class="card-body">
					<h1 class="card-title text-2xl mb-4">Login</h1>

					{/* Display specific or generic error */} 
					{displayError && <p class="text-error text-sm mb-4">{displayError}</p>}
					{/* Display success message from registration */} 
					{message && !displayError && <p class="text-success text-sm mb-4">{message}</p>}

					<form id="login-form" method="POST" action="/api/auth/callback/credentials">
						<input type="hidden" name="csrfToken" value={csrfToken ?? ''} />
						<input type="hidden" name="callbackUrl" value="/dashboard" />

						<div class="form-control w-full max-w-xs">
							<label class="label" for="email">
								<span class="label-text">Email</span>
							</label>
							<input type="email" id="email" name="email" value="picokatx@gmail.com" required class="input input-bordered w-full max-w-xs" />
						</div>

						<div class="form-control w-full max-w-xs mt-2">
							<label class="label" for="password">
								<span class="label-text">Password</span>
							</label>
							<input type="password" id="password" name="password" value="picokatx" required class="input input-bordered w-full max-w-xs" />
						</div>

						<div class="form-control mt-4">
							<label class="label cursor-pointer justify-start gap-2">
								<input type="checkbox" name="rememberMe" class="checkbox checkbox-sm" />
								<span class="label-text">Remember me</span>
							</label>
						</div>

						<div class="form-control mt-6">
							<button type="submit" class="btn btn-primary">Login</button>
						</div>
					</form>

					<div class="text-center text-sm mt-4">
						Don't have an account? <a href="/register" class="link link-primary link-hover">Register</a>
					</div>
				</div>
			</div>
		)}
	</div>
</Layout>

<script>
	const { signOut } = await import("auth-astro/client");

	const logoutButton = document.getElementById("logout");
	if (logoutButton) {
		logoutButton.onclick = () => signOut();
	}
</script>
